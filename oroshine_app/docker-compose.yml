version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: oroshine
    ports:
      - "5432:5432"

  web:
    build: .
    command: /entrypoint.sh
    environment:
      DJANGO_ENV: development
      PG_HOST: db
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: yourpassword
      PG_DB: oroshine
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db





#Testing purpose :
# version: "3.9"

# services:
#   oroshineapp:
#     container_name: oroshineapp
#     # image : harshalbhoyar14/oroshine_app
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     ports:
#       - "8000:8000"
#     environment:
#       - PG_USER=postgres
#       - PG_PASSWORD=postgres
#       - PG_DB=oroshine
#       - PG_PORT=5432
#       - PG_HOST=db
#     depends_on:
#       - db

#   db:
#     container_name: db
#     image: postgres:15
#     environment:
#       - POSTGRES_DB=oroshine
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     volumes:
#       - pgdata:/var/lib/postgresql/data

# volumes:
#   pgdata: {}


# version: "3.9"

# services:
#   oroshineapp:
#     build: .
#     container_name: oroshineapp
#     command: >
#       sh -c "
#         ./wait-for-db.sh db 5432 &&
#         python manage.py migrate &&
#         python manage.py runserver 0.0.0.0:8000
#       "
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     depends_on:
#       db:
#         condition: service_healthy
#     restart: unless-stopped

#   db:
#     image: postgres:15
#     container_name: db
#     environment:
#       - POSTGRES_DB=${PG_DB}
#       - POSTGRES_USER=${PG_USER}
#       - POSTGRES_PASSWORD=${PG_PASSWORD}
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     # ports:
#     #   - "5432:5432"   # optional, expose DB to host
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
#       interval: 5s
#       timeout: 3s
#       retries: 10
#     restart: unless-stopped

# volumes:
#   pgdata: {}



# version: "3.9"


# services:
#   oroshineapp:
#     build: .
#     container_name: oroshineapp
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     depends_on:
#       db:
#         condition: service_healthy
#     restart: unless-stopped

#   db:
#     image: postgres:15
#     container_name: db
#     environment:
#       POSTGRES_DB: ${PG_DB}
#       POSTGRES_USER: ${PG_USER}
#       POSTGRES_PASSWORD: ${PG_PASSWORD}
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
#       interval: 5s
#       timeout: 3s
#       retries: 10
#     restart: unless-stopped

# volumes:
#   pgdata: {}


# version: '3.9'

# services:
#   db:
#     image: postgres:15
#     environment:
#       POSTGRES_USER: ${PG_USER}
#       POSTGRES_PASSWORD: ${PG_PASSWORD}
#       POSTGRES_DB: ${PG_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   web:
#     build: .
#     environment:
#       PG_HOST: db
#       PG_PORT: 5432
#       PG_USER: ${PG_USER}
#       PG_PASSWORD: ${PG_PASSWORD}
#       PG_DB: ${PG_DB}
#       DJANGO_ENV: ${DJANGO_ENV:-development}  # default to development
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     volumes:
#       - .:/app
#     command: /entrypoint.sh

# volumes:
#   postgres_data:
